
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}


$breakpoints-typography: (
  'x-small':  300px,
  'small'  :  768px,
  'medium' :  992px,
  'large'  :  1200px,
  'x-large':  1440px,
  'xx-large':  1600px
);
@mixin respond-to($breakpoint) {
  @content;
  @if map-has-key($breakpoints-typography, $breakpoint) {
    @media (min-width: #{map-get($breakpoints-typography, $breakpoint)}) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}



@mixin box_shadow ($level) {

  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
  } @else if $level == 2 {
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
  } @else if $level == 3 {
    box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
  } @else if $level == 4 {
    box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
  } @else if $level == 5 {
    box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
  }

}




@mixin circle-icon($ci-size,$ci-bg--color,$ci-col-hover) {
  width: $ci-size;
  height: $ci-size;
  background-color:$ci-bg--color;
  line-height: $ci-size;
  border-radius: 50%;
  vertical-align: middle;
  text-align: center;



  i.material-icons{
    line-height:$ci-size;
    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
      line-height: 44px;
    }
    color:#fff;
  }

  &:hover{
    background-color:$ci-col-hover;
  }

}
